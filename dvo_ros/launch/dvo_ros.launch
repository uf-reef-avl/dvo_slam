<launch>
    <!-- runtime configuration -->
    <arg name="run_rviz"              default="true"/>
    <arg name="run_slam_live"         default="true"/>
    <arg name="run_reconfigure"       default="true"/>

    <!-- namespaces -->
    <arg name="camera" default="camera"/>
    
    <!-- TF frames -->
    <arg name="tf_base_link_frame_id"     default="base_link"/>
    <arg name="tf_camera_parent_frame_id" default="world"/>
    
    <arg name="debug" default="false" />
    <arg name="launch_prefix" value="xterm -e gdb --args" if="$(arg debug)" />
    <arg name="launch_prefix" value="" unless="$(arg debug)" />
    
    <group ns="dvo_vis">
        <node launch-prefix="$(arg launch_prefix)" pkg="dvo_ros" type="camera_tracker" name="camera_tracker" output="screen">    
        </node>
    </group>    
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="origin_to_world"  
          args="0.0 0.0 0.0 0 0 0 1 global $(arg tf_base_link_frame_id)"/>

    <node pkg="tf2_ros" type="static_transform_publisher" name="origin_to_camera_parent"  
          args="0.0 0.0 0.5 0.5 -0.5 0.5 -0.5 $(arg tf_base_link_frame_id) $(arg tf_camera_parent_frame_id)"/>

    <!-- RVIZ SECTION -->
    <!--<group unless="$(arg backend_only)">-->
    <arg name="rviz_config_file" default="dvo_ros.rviz"/>
    <node pkg="rviz" type="rviz" name="rviz" output="screen" 
          args="-d $(find dvo_ros)/rviz/$(arg rviz_config_file)" if="$(arg run_rviz)"/>
    <!--</group>-->

    <!-- DYNAMIC RECONFIGURE SECTION -->
    <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rqt_reconfigure" output="screen" if="$(arg run_reconfigure)"/> 

    <group ns="$(arg camera)">
        <param name="driver/data_skip" value="0" />
        <remap from="depth_registered/image_raw" to="depth_registered/input_image"/>    
        <remap from="rgb/image_raw" to="rgb/input_image"/> 
        <!--<remap from="depth_registered/image_raw" to="depth_registered/image_rect_raw"/>    
        <remap from="rgb/image_raw" to="rgb/image_rect"/>
        <remap from="rgb/camera_info" to="rgb/camera_info"/>-->
        <!--<remap from="depth_registered/camera_info" to="depth_registered/camera_info"/>-->

        
        <include if="$(arg run_slam_live)"
                 file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
            <arg name="name" value="$(arg camera)_nodelet_manager" />
            <arg name="debug" value="false" />
            <arg name="num_worker_threads"  value="4" />
        </include>

        <!-- Hardware depth registration -->
        <arg name="depth_registration" default="true" />

        <arg name="rgb_processing"                  default="true"  />
        <arg name="debayer_processing"              default="false" />
        <arg name="ir_processing"                   default="false" />
        <arg name="depth_processing"                default="true" />
        <arg name="depth_registered_processing"     default="true" />
        <arg name="disparity_processing"            default="false" />
        <arg name="disparity_registered_processing" default="false" />
        <arg name="hw_registered_processing"        default="true" if="$(arg depth_registration)" />
        <arg name="sw_registered_processing"        default="false" if="$(arg depth_registration)" />
        <arg name="hw_registered_processing"        default="false" unless="$(arg depth_registration)" />
        <arg name="sw_registered_processing"        default="true" unless="$(arg depth_registration)" />

        <!-- Load astra driver -->
        <include if="$(arg run_slam_live)"
                 file="$(find astra_launch)/launch/includes/device.launch.xml">            
            <arg name="manager"                         value="$(arg camera)_nodelet_manager" />
            <arg name="device_id"                       value="#1" />
            <arg name="bootorder"                       value="0" />
            <arg name="devnums"                         value="1" />
            <arg name="rgb_frame_id"                    value="$(arg camera)_rgb_optical_frame" />
            <arg name="depth_frame_id"                  value="$(arg camera)_depth_optical_frame" />
            <arg name="rgb_camera_info_url"             value="" />
            <arg name="depth_camera_info_url"           value="" />
            <arg name="rgb"                             value="rgb" />
            <arg name="ir"                              value="ir" />
            <arg name="depth"                           value="depth" />
            <arg name="respawn"                         value="false" />
            <arg name="depth_registration"              value="true" />
            <arg name="color_depth_synchronization"     value="false" />
            <arg name="auto_exposure"                   value="true" />
            <arg name="auto_white_balance"              value="true" />
        </include>
        
        <!-- Load standard constellation of processing nodelets -->
        <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
            <arg name="manager"                         value="$(arg camera)_nodelet_manager" />
            <arg name="rgb"                             value="rgb" />
            <arg name="ir"                              value="ir" />
            <arg name="depth"                           value="depth" />
            <arg name="respawn"                         value="false" />
            <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
            <arg name="debayer_processing"              value="$(arg debayer_processing)" />
            <arg name="ir_processing"                   value="$(arg ir_processing)" />
            <arg name="depth_processing"                value="$(arg depth_processing)" />
            <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
            <arg name="disparity_processing"            value="$(arg disparity_processing)" /> 
            <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
            <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
            <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
        </include>        
    </group>
    
    <!--    <node pkg="rosservice" type="rosservice" name="quiet_astra_driver1" args="call -wait /camera/driver/set_logger_level &quot;{logger: 'rosout', level: 'fatal'}&quot;"/> 
    <node pkg="rosservice" type="rosservice" name="quiet_astra_driver2" args="call -wait /camera/camera_nodelet_manager/set_logger_level &quot;{logger: 'rosout', level: 'fatal'}&quot;"/>-->
</launch>
